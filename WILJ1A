Script started on Mon Feb 24 12:01:11 2014
admiral% cat WILJ1A.cpp

#include <iostream>

#include <cstdlib>

#include <ctime>

void Mode(int[], int);

void read_array(int[], int);

void print_array(int[], int);

int main()

{

        srand(time(0));

        const int SIZE = 101;

        int numbers[SIZE];

        read_array(numbers, SIZE);

        print_array(numbers, SIZE);

        Mode(numbers, SIZE);

        system("pause");

        return 0;

}

void read_array(int numArray[], int SIZE)

{

        for (int counter = 1; counter < SIZE; counter++)

        {

                numArray[counter] = (rand() % 30) + 1;

        }

}

void print_array(int numArray[], int SIZE)

{

        for (int counter = 1; counter < SIZE; counter++)

        {

                std::cout << numArray[counter] << " ";

                if (counter%10 == 0)

                        std::cout << std::endl;

        }

}

void Mode(int numArray[], int SIZE)

{

        int possibleModes[31];

        // setting modes elements to 0

        for (int counter = 1; counter <= 30; counter++)

                possibleModes[counter] = 0;

        /*creating the list that says how many of each number there are, the index of

        the number being the number itself and the value of the array at this index/number

        being the amount of times said number appears in the array*/

        for (int value = 1; value <= 30; value++)

                for (int index = 1; index < SIZE; index++)

                if (numArray[index] == value)

                        possibleModes[value]++;

        //array to store the index of the modes

        int modes[31];

        //setting modesArray elements to 0

        for (int counter = 0; counter <= 30; counter++)

                modes[counter] = 0;

        //setting the original element for the modes checking for loop

        int mode = possibleModes[1];

        //the modes checking for loop

        for (int counter = 2; counter <= 30; counter++)

        {

                if (possibleModes[counter] > mode)

                {

                        mode = possibleModes[counter];

                }

        }

        for (int counter = 1; counter <= 30; counter++)

        {

                if (possibleModes[counter] == mode)

                        modes[counter] = 1;

        }

        /* Displays whether or not the number is a mode, the first number 

        being true/false and the second being the corresponding number

        for (int counter = 1; counter <= 30; counter++)

        {

                std::cout << modes[counter] << " " << counter << std::endl;

        }

        */

}

admiral% g++ wilj    WILJ1A.cpp
admiral% a.out IWL^?^?       WILJ1A.cpp
11 4 2 14 14 8 22 15 29 11 
14 2 10 12 26 25 16 2 5 19 
5 14 10 2 12 12 30 10 14 7 
25 9 9 29 18 28 21 2 18 20 
22 7 9 25 28 25 6 5 28 29 
27 6 17 22 30 5 5 25 1 23 
30 20 16 21 20 11 23 26 15 29 
26 16 4 28 7 24 3 22 22 9 
13 10 27 27 5 26 10 30 11 10 
30 18 11 1 7 14 21 19 18 17 
sh: pause: not found
admiral% script      ^D
script done on Mon Feb 24 12:01:56 2014
